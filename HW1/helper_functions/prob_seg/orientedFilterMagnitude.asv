function [mag,theta] = orientedFilterMagnitude(im)
filterBank = makeLMfilters;
[x, y, z] = size(im);
image_responses = zeros(x, y, 3, 24);
image_gray = zeros(x, y, 24);

im = im2double(im);

for i = 1:24
    for j = 1:3
        image_responses(:,:,j, i) = imfilter(im(:,:,j), filterBank(:,:,i));
    end
    image_gray(:, :, i) = cat(3, image_responses(:,:,j, i), image_responses(:,:,j, i),  
end

%Method oriented:	overall F-score = 0.565		average F-score = 0.591

mag = zeros(x,y);
theta = zeros(x,y);
theta_list = [0 pi/12 2*pi/12 3*pi/12 4*pi/12 5*pi/12 6*pi/12 7*pi/12 8*pi/12 9*pi/12 10*pi/12 11*pi/12];

for i = 1:x
    for j = 1:y
        max_mag = -5000;
        max_theta = 0;
        for k = 1:24
            filter_norm = norm([image_responses(i,j,1,k), image_responses(i,j,2,k), image_responses(i,j,3,k)]);
            if filter_norm > max_mag
                max_mag = filter_norm;
                res = mod(k, 12);
                if res == 0
                    res = 12;
                end
                max_theta = theta_list(res);
            end
        end
        max_mag = -200;
        for l = 1:3
            t = zeros(54);
            for m = 1:54
                t(m) = image_responses(i,j,l,m);
            end
            channel_norm = norm(t);
            if channel_norm > max_mag
                max_mag = channel_norm;
            end
        end
        mag(i, j) = max_mag;
        theta(i, j) = max_theta;
    end
end
