function [mu_s, sigma, beta, m_s] = m_step(x, alphas)

[images, annotators] = size(x);
sigma = 0;
mu_s = zeros(images);
m_s = zeros(annotators);

sigma_sum = 0;

%Mus
for i = 1:images
    x_alpha_sum = 0;
    for j = 1:annotators
        x_alpha_sum = x_alpha_sum + x(i, j) * alphas(i, j, 2);
    end
    sum(alphas(i, :, 2))
    sum(alphas(i, :. 
    mu_s(i) = x_alpha_sum/sum(alphas(1, :, 2), 2);
end

%Sigma
for i = 1:images
    for j = 1:annotators
        sigma_sum = sigma_sum + (x(i, j) - mu_s(i))^2 * alpha(i, j, 2);
    end
end

sigma = sigma_sum/sum(sum(alphas));
sigma = sqrt(sigma);

%beta
beta = sum(sum(alphas(i, j, 1)))/sum(sum(sum(alphas)));

%m
for j = 1:annotators
    top_sum_0 = 0;
    top_sum_1 = 0;
    for i = 1:images
        top_sum_0 = top_sum_0 + alphas(i, j, 1) * (1 - beta);
        top_sum_1 = top_sum_1 + alphas(i, j, 2) * (beta);
    end
    m_0 = top_sum_0/(top_sum_0 + top_sum_1);
    m_1 = top_sum_1/(top_sum_0 + top_sum_1);
    
    if m_0 > m_1
        m_s(j) = 1;
    else
        m_s(j) = 2;
    end
end

top